name: Generate APK AAB and Upload as Artifact

env:
  # The name of the main module repository
  main_project_module: app

  # The name of the app
  app_name: Preface

on:
  push:
    branches:
      - 'release/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      # Install Android SDK Tools
      - name: Install Android SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          mkdir -p $HOME/android-sdk/cmdline-tools
          unzip cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/tools
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "PATH=$HOME/android-sdk/cmdline-tools/tools/bin:$HOME/android-sdk/platform-tools:$PATH" >> $GITHUB_ENV
        env:
          ANDROID_HOME: $HOME/android-sdk
          PATH: $HOME/android-sdk/cmdline-tools/tools/bin:$HOME/android-sdk/platform-tools:$PATH

      # Accept SDK Licenses
      - name: Accept SDK Licenses
        run: yes | sdkmanager --licenses

      # Install Required Build Tools
      - name: Install Build Tools
        run: sdkmanager "build-tools;33.0.0" "platform-tools"

      - name: Load Google Service File
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA | base64 -di > app/google-services.json

      - name: Load Secrets XML File
        env:
          DATA: ${{ secrets.SECRETS_XML }}
        run: echo $DATA | base64 -di > app/src/main/res/values/secrets.xml

      - name: Change Wrapper Permissions
        run: chmod +x ./gradlew

      # Run Tests Build
      - name: Run Gradle Tests
        run: ./gradlew test

      # Run Build Project
      - name: Build Gradle Project
        run: ./gradlew build

      # Decode KeyStore
      - name: Decode KeyStore
        run: echo "${{ secrets.SIGNINGKEYBASE64 }}" | base64 -d > preface-keystore.jks

      - name: Build App
        run: ./gradlew assembleRelease

      # Sign APK
      - name: Sign APK
        run: |
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
          -keystore preface-keystore.jks \
          -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
          app/build/outputs/apk/release/app-release-unsigned.apk \
          "${{ secrets.KEY_ALIAS }}"

      # Align APK
      - name: Align APK
        run: zipalign -v 4 app/build/outputs/apk/release/app-release-unsigned.apk app/build/outputs/apk/release/app-release.apk

      # Upload Release APK as Artifact
      - name: Upload Release APK
        uses: actions/upload-artifact@v3
        with:
          name: Preface-App
          path: app/build/outputs/apk/release/app-release.apk
